const { v4: uuidv4 } = require("uuid");

// List of nouns for agent name generation
const nouns = [
  "angel",
  "apple",
  "arrow",
  "badge",
  "basket",
  "bear",
  "bee",
  "bell",
  "bird",
  "boat",
  "book",
  "boot",
  "bottle",
  "box",
  "bridge",
  "brush",
  "bucket",
  "button",
  "cake",
  "camera",
  "candle",
  "car",
  "card",
  "castle",
  "cat",
  "chair",
  "cheese",
  "cherry",
  "chicken",
  "clock",
  "cloud",
  "coat",
  "coffee",
  "coin",
  "comb",
  "cookie",
  "corn",
  "cow",
  "crown",
  "cup",
  "desk",
  "dog",
  "door",
  "dragon",
  "drum",
  "duck",
  "eagle",
  "ear",
  "egg",
  "elephant",
  "eye",
  "face",
  "fan",
  "feather",
  "finger",
  "fire",
  "fish",
  "flag",
  "flower",
  "fork",
  "fox",
  "frog",
  "garden",
  "ghost",
  "gift",
  "glass",
  "glove",
  "goat",
  "grape",
  "guitar",
  "hair",
  "hammer",
  "hat",
  "heart",
  "horse",
  "house",
  "island",
  "jacket",
  "jar",
  "jeans",
  "key",
  "king",
  "kite",
  "knife",
  "ladder",
  "lamp",
  "leaf",
  "leg",
  "letter",
  "lion",
  "lock",
  "map",
  "mask",
  "moon",
  "mountain",
  "mouse",
  "nail",
  "neck",
  "nest",
  "nose",
  "ocean",
  "orange",
  "owl",
  "panda",
  "paper",
  "peach",
  "pencil",
  "penguin",
  "piano",
  "pig",
  "pillow",
  "pizza",
  "plane",
  "planet",
  "plate",
  "potato",
  "queen",
  "rabbit",
  "rainbow",
  "ring",
  "river",
  "robot",
  "rocket",
  "rose",
  "ruler",
  "salad",
  "sandwich",
  "scarf",
  "school",
  "sea",
  "shark",
  "sheep",
  "shirt",
  "shoe",
  "skirt",
  "sky",
  "slug",
  "smile",
  "snake",
  "snow",
  "sock",
  "spoon",
  "spring",
  "square",
  "star",
  "stone",
  "storm",
  "sun",
  "table",
  "tiger",
  "toast",
  "tomato",
  "tornado",
  "train",
  "tree",
  "turtle",
  "umbrella",
  "unicorn",
  "vase",
  "violin",
  "wall",
  "watch",
  "water",
  "whale",
  "wheel",
  "window",
  "wolf",
  "zebra",
];

// Generate a random name with three nouns and a hex code
function generateRandomName() {
  // Select three random nouns
  const selectedNouns = [];
  const nounsCopy = [...nouns]; // Create a copy to avoid modifying the original array

  for (let i = 0; i < 3; i++) {
    const randomIndex = Math.floor(Math.random() * nounsCopy.length);
    selectedNouns.push(nounsCopy[randomIndex]);
    // Remove the selected noun to avoid duplication
    nounsCopy.splice(randomIndex, 1);
  }

  // Generate a random 4-digit hex code
  const hexCode = Math.floor(Math.random() * 0xffff)
    .toString(16)
    .padStart(4, "0");

  return `${selectedNouns.join("-")}-${hexCode}`;
}

// Generate a unique ID
function generateUUID() {
  return uuidv4();
}

// Create a sample YAML template
function createSampleYamlContent() {
  return `# Toolhouse Agent Configuration
# The ID of the agent. Do not change this unless you know what you're doing.
id: ${generateUUID()}

# The name of the agent. This is used for display purposes.
title: Creative Writer

# The prompt of your agent. You can use variables in the prompt.
prompt: "Write a short story about {topic}"

# The variables used in the prompt. You can define default values for these variables.
# Ensure that the variable names match those used in the prompt.
vars:
  topic: "a mysterious island"

# The bundle configuration. You can specify a bundle name or a list of MCP servers you want your agent to use.
# bundle: "default"

# Sets your agent to be public or private. By default, public agents are visible to all users and can be used by anyone.
# Private agents are only visible to you and can only be used when called with your API Key.
# Toolhouse Pro users can create private agents that are not visible to other users.
# public: true

# The end user ID. This is used to give the agent context about the user it is interacting with.
toolhouse_id: "default"

# Schedule configuration. You can specify when the agent should run in cron format.
# schedule: "0 0 * * *" # This would run the agent every day at midnight

# The RAG configuration. You can specify a RAG folder to use.
#rag: "rag_folder"
`;
}

// Sleep function for polling
function sleep(ms) {
  return new Promise((resolve) => setTimeout(resolve, ms));
}

module.exports = {
  generateRandomName,
  generateUUID,
  createSampleYamlContent,
  sleep,
};
