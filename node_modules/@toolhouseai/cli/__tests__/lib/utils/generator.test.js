const { generateRandomName, generateUUID, createSampleYamlContent, sleep } = require('../../../lib/utils/generator');

describe('Generator Utils', () => {
  describe('generateRandomName', () => {
    it('should generate a name with correct format', () => {
      const name = generateRandomName();
      expect(name).toMatch(/^[a-z]+-[a-z]+-[a-z]+-[0-9a-f]{4}$/);
    });

    it('should generate unique names', () => {
      const names = new Set();
      for (let i = 0; i < 100; i++) {
        names.add(generateRandomName());
      }
      expect(names.size).toBe(100);
    });
  });

  describe('generateUUID', () => {
    it('should generate valid UUID', () => {
      const uuid = generateUUID();
      expect(uuid).toMatch(/^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/);
    });
  });

  describe('createSampleYamlContent', () => {
    it('should create valid YAML template', () => {
      const content = createSampleYamlContent();
      expect(content).toContain('id:');
      expect(content).toContain('title:');
      expect(content).toContain('prompt:');
      expect(content).toContain('vars:');
    });
  });

  describe('sleep', () => {
    it('should sleep for specified duration', async () => {
      const start = Date.now();
      await sleep(100);
      const duration = Date.now() - start;
      expect(duration).toBeGreaterThanOrEqual(100);
    });
  });
});